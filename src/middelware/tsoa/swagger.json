{
	"components": {
		"examples": {},
		"headers": {},
		"parameters": {},
		"requestBodies": {},
		"responses": {},
		"schemas": {
			"InternalServerError": {
				"properties": {
					"stack": {
						"type": "string"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"Pick_User.-or-preferred_username-or-password-or-email-or-phone_number-or-given_name-or-family_name-or-address-or-birthdate-or-locale-or-picture_": {
				"properties": {
					"preferred_username": {
						"type": "string"
					},
					"password": {
						"type": "string"
					},
					"email": {
						"type": "string"
					},
					"phone_number": {
						"type": "string"
					},
					"given_name": {
						"type": "string"
					},
					"family_name": {
						"type": "string"
					},
					"address": {
						"type": "string"
					},
					"birthdate": {
						"type": "string",
						"format": "date-time"
					},
					"locale": {
						"type": "string"
					},
					"picture": {
						"type": "string"
					}
				},
				"required": [
					"preferred_username",
					"password"
				],
				"type": "object",
				"description": "From T, pick a set of properties whose keys are in the union K"
			},
			"UserProfileUpdate": {
				"$ref": "#/components/schemas/Pick_User.-or-preferred_username-or-password-or-email-or-phone_number-or-given_name-or-family_name-or-address-or-birthdate-or-locale-or-picture_"
			},
			"Pick_User.preferred_username_": {
				"properties": {
					"preferred_username": {
						"type": "string"
					}
				},
				"required": [
					"preferred_username"
				],
				"type": "object",
				"description": "From T, pick a set of properties whose keys are in the union K"
			},
			"VerifyResend": {
				"$ref": "#/components/schemas/Pick_User.preferred_username_"
			},
			"PasswordResetRequest": {
				"$ref": "#/components/schemas/Pick_User.preferred_username_"
			},
			"Pick_User.password_": {
				"properties": {
					"password": {
						"type": "string"
					}
				},
				"required": [
					"password"
				],
				"type": "object",
				"description": "From T, pick a set of properties whose keys are in the union K"
			},
			"PasswordReset": {
				"$ref": "#/components/schemas/Pick_User.password_"
			},
			"User": {
				"properties": {
					"user_id": {
						"type": "string"
					},
					"googleId": {
						"type": "string"
					},
					"facebookId": {
						"type": "string"
					},
					"preferred_username": {
						"type": "string"
					},
					"salt": {
						"type": "string"
					},
					"password": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"given_name": {
						"type": "string"
					},
					"family_name": {
						"type": "string"
					},
					"nickname": {
						"type": "string"
					},
					"gender": {
						"type": "string"
					},
					"picture": {
						"type": "string"
					},
					"phone_number": {
						"type": "string"
					},
					"email": {
						"type": "string"
					},
					"address": {
						"type": "string"
					},
					"locale": {
						"type": "string"
					},
					"birthdate": {
						"type": "string",
						"format": "date-time"
					},
					"created_at": {
						"type": "string",
						"format": "date-time"
					},
					"updated_at": {
						"type": "string",
						"format": "date-time"
					},
					"email_verified": {
						"type": "boolean"
					},
					"phone_number_verified": {
						"type": "boolean"
					},
					"signed_up_local": {
						"type": "boolean"
					},
					"signed_up_google": {
						"type": "boolean"
					},
					"signed_up_facebook": {
						"type": "boolean"
					},
					"disabled": {
						"type": "boolean"
					},
					"verification_attempts": {
						"type": "number",
						"format": "double"
					},
					"account_locked": {
						"type": "boolean"
					},
					"user_groups": {
						"items": {
							"$ref": "#/components/schemas/UserGroup"
						},
						"type": "array"
					}
				},
				"required": [
					"user_id",
					"googleId",
					"facebookId",
					"preferred_username",
					"salt",
					"password",
					"created_at",
					"updated_at",
					"email_verified",
					"phone_number_verified",
					"signed_up_local",
					"signed_up_google",
					"signed_up_facebook",
					"disabled",
					"verification_attempts",
					"account_locked",
					"user_groups"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ScopeGroup": {
				"properties": {
					"scope_group_id": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"description": {
						"type": "string"
					},
					"created_at": {
						"type": "string",
						"format": "date-time"
					},
					"updated_at": {
						"type": "string",
						"format": "date-time"
					},
					"disabled": {
						"type": "boolean"
					},
					"scopes": {
						"items": {
							"$ref": "#/components/schemas/Scopes"
						},
						"type": "array"
					},
					"userGroups": {
						"items": {
							"$ref": "#/components/schemas/UserGroup"
						},
						"type": "array"
					}
				},
				"required": [
					"scope_group_id",
					"name",
					"description",
					"created_at",
					"updated_at",
					"disabled",
					"scopes",
					"userGroups"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Scopes": {
				"properties": {
					"scope_id": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"description": {
						"type": "string"
					},
					"created_at": {
						"type": "string",
						"format": "date-time"
					},
					"updated_at": {
						"type": "string",
						"format": "date-time"
					},
					"disabled": {
						"type": "boolean"
					},
					"scope_groups": {
						"items": {
							"$ref": "#/components/schemas/ScopeGroup"
						},
						"type": "array"
					}
				},
				"required": [
					"scope_id",
					"name",
					"description",
					"created_at",
					"updated_at",
					"disabled",
					"scope_groups"
				],
				"type": "object",
				"additionalProperties": false
			},
			"UserGroup": {
				"properties": {
					"user_group_id": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"created_at": {
						"type": "string",
						"format": "date-time"
					},
					"updated_at": {
						"type": "string",
						"format": "date-time"
					},
					"disabled": {
						"type": "boolean"
					},
					"users": {
						"items": {
							"$ref": "#/components/schemas/User"
						},
						"type": "array"
					},
					"scope_groups": {
						"items": {
							"$ref": "#/components/schemas/ScopeGroup"
						},
						"type": "array"
					}
				},
				"required": [
					"user_group_id",
					"name",
					"created_at",
					"updated_at",
					"disabled",
					"users",
					"scope_groups"
				],
				"type": "object",
				"additionalProperties": false
			},
			"UserGroupRequest": {
				"properties": {
					"name": {
						"type": "string"
					},
					"user_group_id": {
						"type": "string"
					},
					"users": {
						"items": {
							"$ref": "#/components/schemas/User"
						},
						"type": "array"
					},
					"scope_groups": {
						"items": {
							"$ref": "#/components/schemas/ScopeGroup"
						},
						"type": "array"
					}
				},
				"required": [
					"name"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Pick_User.preferred_username-or-password-or-given_name-or-family_name_": {
				"properties": {
					"preferred_username": {
						"type": "string"
					},
					"password": {
						"type": "string"
					},
					"given_name": {
						"type": "string"
					},
					"family_name": {
						"type": "string"
					}
				},
				"required": [
					"preferred_username",
					"password"
				],
				"type": "object",
				"description": "From T, pick a set of properties whose keys are in the union K"
			},
			"SignUp": {
				"$ref": "#/components/schemas/Pick_User.preferred_username-or-password-or-given_name-or-family_name_"
			},
			"Pick_User.preferred_username-or-password_": {
				"properties": {
					"preferred_username": {
						"type": "string"
					},
					"password": {
						"type": "string"
					}
				},
				"required": [
					"preferred_username",
					"password"
				],
				"type": "object",
				"description": "From T, pick a set of properties whose keys are in the union K"
			},
			"SignIn": {
				"$ref": "#/components/schemas/Pick_User.preferred_username-or-password_"
			}
		},
		"securitySchemes": {
			"jwt": {
				"type": "http",
				"scheme": "bearer",
				"bearerFormat": "JWT"
			},
			"google": {
				"type": "oauth2",
				"flows": {
					"implicit": {
						"authorizationUrl": "http://localhost:7000/auth/google",
						"scopes": {}
					}
				}
			},
			"facebook": {
				"type": "oauth2",
				"flows": {
					"implicit": {
						"authorizationUrl": "http://localhost:7000/auth/facebook",
						"scopes": {}
					}
				}
			}
		}
	},
	"info": {
		"title": "micro-identity",
		"version": "0.0.1",
		"description": "Boilerplate for creating identity microservice",
		"license": {
			"name": "MIT"
		},
		"contact": {
			"name": "Martin Greyling"
		}
	},
	"openapi": "3.0.0",
	"paths": {
		"/account/profile": {
			"post": {
				"operationId": "ProfilePost",
				"responses": {
					"200": {
						"description": "Account Verified!",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"Profile API Internal Server Error": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/InternalServerError"
								}
							}
						}
					}
				},
				"tags": [
					"Account"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/UserProfileUpdate"
							}
						}
					}
				}
			}
		},
		"/account/verify/resend": {
			"post": {
				"operationId": "VerifyResend",
				"responses": {
					"200": {
						"description": "Verification Message Resent!",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"Verification Message API Internal Server Error": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/InternalServerError"
								}
							}
						}
					}
				},
				"tags": [
					"Account"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/VerifyResend"
							}
						}
					}
				}
			}
		},
		"/account/verify": {
			"get": {
				"operationId": "VerifyGet",
				"responses": {
					"200": {
						"description": "Account Verified!",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"Verify API Internal Server Error": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/InternalServerError"
								}
							}
						}
					}
				},
				"tags": [
					"Account"
				],
				"security": [
					{
						"jwt-query": []
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "token",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/account/password/reset/request": {
			"post": {
				"operationId": "PasswordRequestPost",
				"responses": {
					"200": {
						"description": "Account Verified!",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"Verify API Internal Server Error": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/InternalServerError"
								}
							}
						}
					}
				},
				"tags": [
					"Account"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/PasswordResetRequest"
							}
						}
					}
				}
			}
		},
		"/account/password/reset": {
			"post": {
				"operationId": "PasswordResetPost",
				"responses": {
					"200": {
						"description": "Account Verified!",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"Verify API Internal Server Error": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/InternalServerError"
								}
							}
						}
					}
				},
				"tags": [
					"Account"
				],
				"security": [
					{
						"jwt-query": []
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "token",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/PasswordReset"
							}
						}
					}
				}
			}
		},
		"/admin/usergroup": {
			"post": {
				"operationId": "CreateOrUpdateUserGroup",
				"responses": {
					"201": {
						"description": "Created",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"UserGroup API Internal Server Error": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/InternalServerError"
								}
							}
						}
					}
				},
				"tags": [
					"Admin"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/UserGroupRequest"
							}
						}
					}
				}
			}
		},
		"/auth/signup": {
			"post": {
				"operationId": "SignUpPost",
				"responses": {
					"201": {
						"description": "Created",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"Signup API Internal Server Error": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/InternalServerError"
								}
							}
						}
					}
				},
				"tags": [
					"Authentication"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/SignUp"
							}
						}
					}
				}
			}
		},
		"/auth/signin": {
			"post": {
				"operationId": "SignInPost",
				"responses": {
					"200": {
						"description": "User Logged In!",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"Signin API Internal Server Error": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/InternalServerError"
								}
							}
						}
					}
				},
				"tags": [
					"Authentication"
				],
				"security": [],
				"parameters": [
					{
						"in": "query",
						"name": "response_type",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "scope",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "client_id",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "client_secret",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "state",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/SignIn"
							}
						}
					}
				}
			}
		},
		"/auth/google": {
			"get": {
				"operationId": "SignInGoogle",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"tags": [
					"Authentication"
				],
				"security": [],
				"parameters": []
			}
		},
		"/auth/facebook": {
			"get": {
				"operationId": "SignInFacebook",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"tags": [
					"Authentication"
				],
				"security": [],
				"parameters": []
			}
		},
		"/oauth/client": {
			"post": {
				"operationId": "CreateOrUpdateOauthClient",
				"responses": {
					"201": {
						"description": "Created",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"Oauth Client API Internal Server Error": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/InternalServerError"
								}
							}
						}
					}
				},
				"tags": [
					"Oauth Admin"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"clientSecret": {
										"type": "string"
									},
									"clientName": {
										"type": "string"
									}
								},
								"required": [
									"clientSecret",
									"clientName"
								],
								"type": "object"
							}
						}
					}
				}
			}
		},
		"/oauth/clients": {
			"get": {
				"operationId": "GetAllClients",
				"responses": {
					"201": {
						"description": "Created",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"Oauth Client API Internal Server Error": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/InternalServerError"
								}
							}
						}
					}
				},
				"tags": [
					"Oauth Admin"
				],
				"security": [],
				"parameters": []
			}
		},
		"/oauth/client/{clientName}": {
			"get": {
				"operationId": "GetClient",
				"responses": {
					"201": {
						"description": "Created",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"Oauth Client API Internal Server Error": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/InternalServerError"
								}
							}
						}
					}
				},
				"tags": [
					"Oauth Admin"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "clientName",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"delete": {
				"operationId": "DeleteClient",
				"responses": {
					"201": {
						"description": "Created",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"Oauth Client API Internal Server Error": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/InternalServerError"
								}
							}
						}
					}
				},
				"tags": [
					"Oauth Admin"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "clientName",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		}
	},
	"servers": [
		{
			"url": "/"
		}
	]
}